{"version":3,"file":"Swup.modern.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/createHistoryRecord.ts","../src/helpers/updateHistoryRecord.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/fetchPage.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (\n\turl: string,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.pushState(data, '', url);\n};\n","import type { HistoryState } from './createHistoryRecord.js';\nimport { getCurrentUrl } from './getCurrentUrl.js';\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (\n\turl: string | null = null,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state = (history.state as HistoryState) || {};\n\tconst data: HistoryState = {\n\t\t...state,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.replaceState(data, '', url);\n};\n","import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, {\n\t\t\t\turl: url,\n\t\t\t\taborted: true\n\t\t\t});\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (\n\t\tthis.visit.cache.write &&\n\t\t(!options.method || options.method === 'GET') &&\n\t\turl === finalUrl\n\t) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @returns The offset height, just here so it doesn't get optimized away by the JS engine\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement) {\n\telement = element || document.body;\n\treturn element?.offsetHeight;\n}\n\n/** Escape a string with special chars to not break CSS selectors. */\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t}\n\treturn ident;\n};\n\n/** Fix for Chrome below v61 formatting CSS floats with comma in some locales. */\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = ['to-', 'is-changing', 'is-rendering', 'is-popstate', 'is-animating'];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** An object holding details about the current visit. */\nexport interface Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** Create a new visit object. */\nexport function createVisit(\n\tthis: Swup,\n\t{ to, from = this.currentPageUrl, hash, el, event }: VisitInitOptions\n): Visit {\n\treturn {\n\t\tid: Math.random(),\n\t\tfrom: { url: from },\n\t\tto: { url: to, hash },\n\t\tcontainers: this.options.containers,\n\t\tanimation: {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tscope: this.options.animationScope,\n\t\t\tselector: this.options.animationSelector\n\t\t},\n\t\ttrigger: {\n\t\t\tel,\n\t\t\tevent\n\t\t},\n\t\tcache: {\n\t\t\tread: this.options.cache,\n\t\t\twrite: this.options.cache\n\t\t},\n\t\thistory: {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t},\n\t\tscroll: {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t}\n\t};\n}\n","import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport type { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean>;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n\t'visit:transition': Promise<boolean>;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targs: HookArguments<T>,\n\t\tdefaultHandler?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, args);\n\t\tconst [result] = await this.run(handler, args);\n\t\tawait this.run(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targs: HookArguments<T>,\n\t\tdefaultHandler?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, args);\n\t\tconst [result] = this.runSync(handler, args);\n\t\tthis.runSync(after, args);\n\t\tthis.dispatchDomEvent(hook, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], args: HookArguments<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\targs: HookArguments<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = await runAsPromise(handler, [this.swup.visit, args, defaultHandler]);\n\t\t\tresults.push(result);\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], args: HookArguments<T> ): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\targs: HookArguments<T>\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tconst result = (handler as HookDefaultHandler<T>)(this.swup.visit, args, defaultHandler); // prettier-ignore\n\t\t\tresults.push(result);\n\t\t\tif (isPromise(result)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Promise returned from handler for synchronous hook '${hook}'.` +\n\t\t\t\t\t\t`Swup will not wait for it to resolve.`\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (once) {\n\t\t\t\tthis.off(hook, handler);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(hook: T, args?: HookArguments<T>): void {\n\t\tconst detail = { hook, args, visit: this.swup.visit };\n\t\tdocument.dispatchEvent(new CustomEvent(`swup:${hook}`, { detail }));\n\t}\n}\n","import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll, toMs } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\ntype AnimationProperties = 'Delay' | 'Duration';\ntype AnimationStyleKeys = `${AnimationTypes}${AnimationProperties}` | 'transitionProperty';\ntype AnimationStyleDeclarations = Pick<CSSStyleDeclaration, AnimationStyleKeys>;\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\telements,\n\t\tselector\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: Element): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(element: Element, expectedType?: AnimationTypes) {\n\tconst styles = window.getComputedStyle(element) as AnimationStyleDeclarations;\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: AnimationTypes | null = null;\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === TRANSITION) {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = TRANSITION;\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === ANIMATION) {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = ANIMATION;\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\t\tpropCount = type\n\t\t\t? type === TRANSITION\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction isTransitionOrAnimationEvent(event: Event): event is TransitionEvent | AnimationEvent {\n\treturn [`${TRANSITION}end`, `${ANIMATION}end`].includes(event.type);\n}\n\nfunction getStyleProperties(styles: AnimationStyleDeclarations, key: AnimationStyleKeys): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import type Swup from '../Swup.js';\nimport { createHistoryRecord, updateHistoryRecord, getCurrentUrl, Location } from '../helpers.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport type { VisitInitOptions } from './Visit.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.href = url;\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\tthis.visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tthis.navigating = true;\n\t// Save this localy to a) allow ignoring the visit if a new one was started in the meantime\n\t// and b) avoid unintended modifications to any newer visits\n\tconst visit = this.visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.currentPageUrl;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || el?.getAttribute('data-swup-history') || undefined;\n\tif (history && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || el?.getAttribute('data-swup-animation') || undefined;\n\tif (animation) {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', undefined);\n\n\t\t// Begin loading page\n\t\tconst pagePromise = this.hooks.call('page:load', { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tif (!visit.history.popstate) {\n\t\t\t// Add the hash directly from the trigger element\n\t\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.currentPageUrl) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\n\t\tthis.currentPageUrl = getCurrentUrl();\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tconst { html } = await pagePromise;\n\t\t\tvisit.to.html = html;\n\t\t}\n\n\t\t// perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', undefined, async (visit) => {\n\t\t\t// Start leave animation\n\t\t\tconst animationPromise = this.animatePageOut();\n\n\t\t\t// Wait for page to load and leave animation to finish\n\t\t\tconst [page] = await Promise.all([pagePromise, animationPromise]);\n\n\t\t\t// Abort if another visit was started in the meantime\n\t\t\tif (visit.id !== this.visit.id) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Render page: replace content and scroll to top/fragment\n\t\t\tawait this.renderPage(page);\n\n\t\t\t// Wait for enter animation\n\t\t\tawait this.animatePageIn();\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', undefined, () => this.classes.clear());\n\n\t\t// Reset visit info after finish?\n\t\t// if (visit.to && this.isSameResolvedUrl(visit.to.url, requestedUrl)) {\n\t\t// \tthis.visit = this.createVisit({ to: undefined });\n\t\t// }\n\t\tthis.navigating = false;\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Log to console as we swallow almost all hook errors\n\t\tconsole.error(error);\n\n\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.href = visit.to.url + visit.to.hash;\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.go(-1);\n\t}\n}\n","import type Swup from '../Swup.js';\nimport { classify } from '../helpers.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\tawait this.hooks.call('animation:skip', undefined);\n\t\treturn;\n\t}\n\n\tawait this.hooks.call('animation:out:start', undefined, (visit) => {\n\t\tthis.classes.add('is-changing', 'is-leaving', 'is-animating');\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\t});\n\n\tawait this.hooks.call('animation:out:await', { skip: false }, async (visit, { skip }) => {\n\t\tif (skip) return;\n\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', undefined);\n};\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * It takes an object with the page data as returned from `fetchPage` and a list\n * of container selectors to replace.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (\n\tthis: Swup,\n\t{ html }: PageData,\n\t{ containers }: { containers: Options['containers'] } = this.options\n): boolean {\n\tconst incomingDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\treturn replaced.length === containers.length;\n};\n","import type Swup from '../Swup.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = this.visit.scroll;\n\tconst scrollTarget = target ?? this.visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup) {\n\tif (!this.visit.animation.animate) {\n\t\treturn;\n\t}\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\t{ skip: false },\n\t\tasync (visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\tawait this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', undefined);\n};\n","import { updateHistoryRecord, getCurrentUrl, classify } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, page: PageData): Promise<void> {\n\tconst { url, html } = page;\n\n\tthis.classes.remove('is-leaving');\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tthis.visit.to.url = this.currentPageUrl;\n\t}\n\n\t// only add for animated page loads\n\tif (this.visit.animation.animate) {\n\t\tthis.classes.add('is-rendering');\n\t}\n\n\t// save html into visit context for easier retrieval\n\tthis.visit.to.html = html;\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', { page }, (visit, { page }) => {\n\t\tconst success = this.replaceContent(page, { containers: visit.containers });\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-animating', 'is-changing', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\t// @ts-ignore: not returning a promise is intentional to allow users to pause in handler\n\tawait this.hooks.call('content:scroll', undefined, () => {\n\t\treturn this.scrollToContent();\n\t});\n\n\tawait this.hooks.call('page:view', { url: this.currentPageUrl, title: document.title });\n};\n","import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n","import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/createHistoryRecord.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** URL of the currently visible page */\n\tcurrentPageUrl: string = getCurrentUrl();\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (history.state as HistoryState)?.index ?? 1;\n\n\t\tif (!this.checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enable();\n\t}\n\n\tprotected checkRequirements() {\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Create initial history record\n\t\tif ((history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, () => {\n\t\t\t// Add swup-enabled class to html tag\n\t\t\tdocument.documentElement.classList.add('swup-enabled');\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, () => {\n\t\t\t// remove swup-enabled class from html tag\n\t\t\tdocument.documentElement.classList.remove('swup-enabled');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.call('link:newtab', { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', { el, event }, () => {\n\t\t\tconst from = this.visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', undefined, () => {\n\t\t\t\t\t\tswitch (this.options.linkToSelf) {\n\t\t\t\t\t\t\tcase 'navigate':\n\t\t\t\t\t\t\t\treturn this.performNavigation();\n\t\t\t\t\t\t\tcase 'scroll':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\t\treturn this.scrollToContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation();\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tthis.visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tthis.visit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tthis.visit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tthis.visit.animation.animate = false;\n\t\tthis.visit.scroll.reset = false;\n\t\tthis.visit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tthis.visit.animation.animate = true;\n\t\t\tthis.visit.scroll.reset = true;\n\t\t}\n\n\t\t// Does this even do anything?\n\t\t// if (!hash) {\n\t\t// \tevent.preventDefault();\n\t\t// }\n\n\t\tthis.hooks.callSync('history:popstate', { event }, () => {\n\t\t\tthis.performNavigation();\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","location","pathname","search","createHistoryRecord","url","customData","data","_extends","random","Math","source","history","pushState","updateHistoryRecord","state","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","this","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","FetchError","message","details","status","aborted","timedOut","name","async","fetchPage","_options$timeout","headers","requestHeaders","timeout","response","timeoutId","setTimeout","hooks","call","visit","fetch","clearTimeout","responseUrl","html","finalUrl","page","cache","write","method","set","Cache","swup","pages","Map","size","all","copy","forEach","key","has","resolve","get","result","callSync","update","payload","delete","clear","undefined","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","Promise","requestAnimationFrame","isPromise","obj","then","runAsPromise","func","args","reject","forceReflow","element","_element","body","offsetHeight","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","Classes","swupClasses","selectors","scope","animation","containers","isArray","join","targets","trim","add","classes","target","classList","remove","className","split","filter","c","isSwupClass","some","startsWith","createVisit","to","currentPageUrl","event","id","animate","wait","animationScope","animationSelector","trigger","read","action","popstate","direction","scroll","reset","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","registration","off","before","once","defaultHandler","after","getHandlers","run","dispatchDomEvent","runSync","registrations","results","push","found","replaced","values","sort","sortRegistrations","T","length","index","createDefaultHandler","next","a","b","_a$priority","_b$priority","priority","dispatchEvent","CustomEvent","detail","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","TRANSITION","ANIMATION","awaitAnimations","elements","animatedElements","awaitedAnimations","map","propCount","expectedType","styles","getComputedStyle","transitionDelays","getStyleProperties","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","includes","isTransitionOrAnimationEvent","elapsedTime","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","i","navigate","shouldIgnoreVisit","performNavigation","navigating","referrer","_options$cache$read","_options$cache$write","pagePromise","cachedPage","newUrl","currentHistoryIndex","animationPromise","animatePageOut","renderPage","animatePageIn","skipPopStateHandling","go","skip","replaceContent","_incomingDocument$que","incomingDocument","DOMParser","parseFromString","title","innerText","persistedElements","currentEl","incomingEl","replaceWith","existing","replacement","scrollToContent","behavior","scrollTarget","scrolled","anchor","scrollIntoView","scrollTo","top","left","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","closest","linkSelector","linkToSelf","Accept","_event$state","Swup","_history$state$index","_history$state","version","clickDelegate","log","handleLinkClick","bind","handlePopState","checkRequirements","enable","_history$state2","scrollRestoration","documentElement","origin","triggerWillOpenNewWindow","delegateTarget","preventDefault","metaKey","ctrlKey","shiftKey","altKey","button","_this$visit$from$url","_event$state$url","_event$state2","_event$state$index","_event$state3","triggerEl","matches"],"mappings":"sSACa,MAAAA,EAAWA,CAACC,EAAcC,IACvBC,OAAOF,GACpBG,cAGAC,QAAQ,YAAa,KACrBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KACLH,GAAY,GCTjBI,EAAgBA,EAAGC,QAA6B,CAAE,IACvDC,SAASC,SAAWD,SAASE,QAAUH,EAAOC,SAASD,KAAO,ICSzDI,EAAsBA,CAClCC,EACAC,EAAsC,CAAA,KAGtC,MAAMC,EAAIC,EACTH,CAAAA,IAFDA,EAAMA,GAAON,EAAc,CAAEC,MAAM,IAGlCS,OAAQC,KAAKD,SACbE,OAAQ,QACLL,GAEJM,QAAQC,UAAUN,EAAM,GAAIF,EAC7B,ECnBaS,EAAsBA,CAClCT,EAAqB,KACrBC,EAAsC,CAAE,KAExCD,EAAMA,GAAON,EAAc,CAAEC,MAAM,IACnC,MACMO,EAAIC,EACNO,CAAAA,EAFWH,QAAQG,OAA0B,IAGhDV,MACAI,OAAQC,KAAKD,SACbE,OAAQ,QACLL,GAEJM,QAAQI,aAAaT,EAAM,GAAIF,EAChC,ECNaY,EAAgBA,CAK5BC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAa,IAAIC,gBAGvB,OAFAF,EAAOb,EAAA,CAAA,EAAQa,EAAO,CAAEG,OAAQF,EAAWE,SAC3CC,EAAqCP,EAAUC,EAAMC,EAAUC,GACxD,CAAEK,QAASA,IAAMJ,EAAWK,QAAO,ECpBrC,MAAOC,UAAiBC,IAC7BC,WAAAA,CAAYzB,EAAmB0B,EAAeC,SAASC,SACtDC,MAAM7B,EAAI8B,WAAYJ,EACvB,CAKA,OAAI1B,GACH,OAAO+B,KAAKlC,SAAWkC,KAAKjC,MAC7B,CAOA,kBAAOkC,CAAYC,GAClB,MAAMC,EAAOD,EAAGE,aAAa,SAAWF,EAAGE,aAAa,eAAiB,GACzE,OAAO,IAAIZ,EAASW,EACrB,CAOA,cAAOE,CAAQpC,GACd,OAAO,IAAIuB,EAASvB,EACrB,ECrBY,MAAAqC,EAAYA,CACxBC,EACAtB,KAEA,IACC,OAAOuB,EAASD,EAAMtB,EACtB,CAAC,MAAOwB,GACR,MAAM,IAAIC,MAAM,8BAA8BlD,OAAO+C,SAAY/C,OAAOiD,KACxE,GCAW,MAAAE,UAAmBD,MAK/BhB,WAAAA,CACCkB,EACAC,GAEAf,MAAMc,GAASZ,KARhB/B,SACA6C,EAAAA,KAAAA,mBACAC,aAAO,EAAAf,KACPgB,cAAQ,EAMPhB,KAAKiB,KAAO,aACZjB,KAAK/B,IAAM4C,EAAQ5C,IACnB+B,KAAKc,OAASD,EAAQC,OACtBd,KAAKe,QAAUF,EAAQE,UAAW,EAClCf,KAAKgB,SAAWH,EAAQG,WAAY,CACrC,EAMqBE,eAAAC,EAErBlD,EACAgB,EAAwB,CAAA,GAAE,IAAAmC,EAE1BnD,EAAMuB,EAASa,QAAQpC,GAAKA,IAE5B,MAAMoD,EAAOjD,EAAA,CAAA,EAAQ4B,KAAKf,QAAQqC,eAAmBrC,EAAQoC,SACvDE,EAAyB,OAAlBH,EAAGnC,EAAQsC,SAAOH,EAAIpB,KAAKf,QAAQsC,QAC1CrC,EAAa,IAAIC,iBACjBC,OAAEA,GAAWF,EACnBD,EAAOb,EAAQa,CAAAA,EAAAA,EAASoC,CAAAA,UAASjC,WAEjC,IAUIoC,EAVAR,GAAW,EACXS,EAAkD,KAClDF,GAAWA,EAAU,IACxBE,EAAYC,WAAW,KACtBV,GAAW,EACX9B,EAAWK,MAAM,UAClB,EAAGgC,IAKJ,IACCC,QAAqBxB,KAAC2B,MAAMC,KAC3B,gBACA,CAAE3D,MAAKgB,WACP,CAAC4C,GAAS5D,MAAKgB,aAAc6C,MAAM7D,EAAKgB,IAErCwC,GACHM,aAAaN,EAEd,CAAC,MAAOhB,GACR,GAAIO,EAEH,MADAhB,KAAK2B,MAAMC,KAAK,gBAAiB,CAAE3D,QACzB,IAAA0C,EAAW,sBAAsB1C,IAAO,CAAEA,MAAK+C,aAE1D,GAA+B,gBAA1BP,MAAAA,OAAAA,EAAAA,EAAiBQ,OAAyB7B,EAAO2B,QACrD,MAAU,IAAAJ,EAA+B,oBAAA1C,IAAO,CAC/CA,IAAKA,EACL8C,SAAS,IAGX,MAAMN,CACN,CAED,MAAMK,OAAEA,EAAQ7C,IAAK+D,GAAgBR,EAC/BS,QAAaT,EAASlE,OAE5B,GAAe,MAAXwD,EAEH,MADAd,KAAK2B,MAAMC,KAAK,cAAe,CAAEd,SAAQU,WAAUvD,IAAK+D,IAClD,IAAIrB,EAAW,iBAAiBqB,IAAe,CAAElB,SAAQ7C,IAAK+D,IAGrE,IAAKC,EACJ,MAAU,IAAAtB,EAAW,mBAAmBqB,IAAe,CAAElB,SAAQ7C,IAAK+D,IAIvE,MAAQ/D,IAAKiE,GAAa1C,EAASa,QAAQ2B,GACrCG,EAAO,CAAElE,IAAKiE,EAAUD,QAW9B,OAPCjC,KAAK6B,MAAMO,MAAMC,OACfpD,EAAQqD,QAA6B,QAAnBrD,EAAQqD,QAC5BrE,IAAQiE,GAERlC,KAAKoC,MAAMG,IAAIJ,EAAKlE,IAAKkE,GAGnBA,CACR,CC1Ga,MAAAK,EAOZ9C,WAAAA,CAAY+C,QALFA,UAAI,EAAAzC,KAGJ0C,MAAgC,IAAIC,IAG7C3C,KAAKyC,KAAOA,CACb,CAGA,QAAIG,GACH,YAAYF,MAAME,IACnB,CAGA,OAAIC,GACH,MAAMC,EAAO,IAAIH,IAIjB,OAHA3C,KAAK0C,MAAMK,QAAQ,CAACZ,EAAMa,KACzBF,EAAKP,IAAIS,EAAG5E,EAAO+D,CAAAA,EAAAA,GAAM,GAEnBW,CACR,CAGAG,GAAAA,CAAIhF,GACH,OAAW+B,KAAC0C,MAAMO,IAAIjD,KAAKkD,QAAQjF,GACpC,CAGAkF,GAAAA,CAAIlF,GACH,MAAMmF,EAASpD,KAAK0C,MAAMS,IAAInD,KAAKkD,QAAQjF,IAC3C,OAAKmF,EACLhF,EAAA,CAAA,EAAYgF,GADQA,CAErB,CAGAb,GAAAA,CAAItE,EAAakE,GAEhBA,EAAI/D,KAAQ+D,EAAI,CAAElE,IADlBA,EAAM+B,KAAKkD,QAAQjF,KAEnB+B,KAAK0C,MAAMH,IAAItE,EAAKkE,GACpBnC,KAAKyC,KAAKd,MAAM0B,SAAS,YAAa,CAAElB,QACzC,CAGAmB,MAAAA,CAAOrF,EAAasF,GACnBtF,EAAM+B,KAAKkD,QAAQjF,GACnB,MAAMkE,EAAI/D,EAAQ,CAAA,EAAA4B,KAAKmD,IAAIlF,GAASsF,EAAStF,CAAAA,QAC7C+B,KAAK0C,MAAMH,IAAItE,EAAKkE,EACrB,CAGAqB,OAAOvF,GACN+B,KAAK0C,MAAMc,OAAOxD,KAAKkD,QAAQjF,GAChC,CAGAwF,KAAAA,GACCzD,KAAK0C,MAAMe,QACXzD,KAAKyC,KAAKd,MAAM0B,SAAS,mBAAeK,EACzC,CAGAC,KAAAA,CAAMC,GACL5D,KAAK0C,MAAMK,QAAQ,CAACZ,EAAMlE,KACrB2F,EAAU3F,EAAKkE,IAClBnC,KAAKwD,OAAOvF,EACZ,EAEH,CAGUiF,OAAAA,CAAQW,GACjB,MAAM5F,IAAEA,GAAQuB,EAASa,QAAQwD,GACjC,OAAO7D,KAAKyC,KAAKqB,WAAW7F,EAC7B,ECpFY,MAAA8F,EAAQA,CAACjF,EAAkBkF,EAA8BpE,WAC9DoE,EAAQC,cAA2BnF,GAI9BoF,EAAWA,CACvBpF,EACAkF,EAA8BpE,WAEvBuE,MAAMC,KAAKJ,EAAQK,iBAAiBvF,IAI/BwF,EAAWA,IACZ,IAAAC,QAASrB,IACnBsB,sBAAsB,KACrBA,sBAAsB,KACrBtB,GAAO,EACP,EACD,GAKG,SAAUuB,EAAaC,GAC5B,QACGA,IACc,iBAARA,GAAmC,mBAARA,IACc,mBAAzCA,EAAgCC,IAE1C,UAIgBC,EAAaC,EAAgBC,EAAkB,IAC9D,WAAWP,QAAQ,CAACrB,EAAS6B,KAC5B,MAAM3B,EAAkByB,KAAQC,GAC5BL,EAAUrB,GACbA,EAAOuB,KAAKzB,EAAS6B,GAErB7B,EAAQE,EACR,EAEH,CAOgB,SAAA4B,EAAYC,GAAqB,IAAAC,EAEhD,cAAAA,EADAD,EAAUA,GAAWrF,SAASuF,aACvBD,EAASE,YACjB,CAGa,MAAAC,EAAuBC,GAE/BC,OAAOC,KAAOD,OAAOC,IAAIC,OACrBD,IAAIC,OAAOH,GAEZA,EAIKI,EAAQC,GAC8B,IAA3CC,OAAOD,EAAEE,MAAM,GAAI,GAAGnI,QAAQ,IAAK,YChE9BoI,EAIZpG,WAAAA,CAAY+C,GAAUzC,KAHZyC,UAAI,EAAAzC,KACJ+F,YAAc,CAAC,MAAO,cAAe,eAAgB,cAAe,gBAG7E/F,KAAKyC,KAAOA,CACb,CAEA,aAAcuD,GACb,MAAMC,MAAEA,GAAUjG,KAAKyC,KAAKZ,MAAMqE,UAClC,MAAc,eAAVD,EAAmCjG,KAACyC,KAAKZ,MAAMsE,WACrC,SAAVF,EAAyB,CAAC,QAC1B9B,MAAMiC,QAAQH,GAAeA,EAC1B,EACR,CAEA,YAAcnH,GACb,OAAOkB,KAAKgG,UAAUK,KAAK,IAC5B,CAEA,WAAcC,GACb,OAAKtG,KAAKlB,SAASyH,OACZrC,EAASlE,KAAKlB,UADa,EAEnC,CAEA0H,GAAAA,IAAOC,GACNzG,KAAKsG,QAAQvD,QAAS2D,GAAWA,EAAOC,UAAUH,OAAOC,GAC1D,CAEAG,MAAAA,IAAUH,GACTzG,KAAKsG,QAAQvD,QAAS2D,GAAWA,EAAOC,UAAUC,UAAUH,GAC7D,CAEAhD,KAAAA,GACCzD,KAAKsG,QAAQvD,QAAS2D,IACrB,MAAME,EAASF,EAAOG,UAAUC,MAAM,KAAKC,OAAQC,GAAMhH,KAAKiH,YAAYD,IAC1EN,EAAOC,UAAUC,UAAUA,EAAM,EAEnC,CAEUK,WAAAA,CAAYJ,GACrB,OAAW7G,KAAC+F,YAAYmB,KAAMF,GAAMH,EAAUM,WAAWH,GAC1D,EC+Ce,SAAAI,GAEfC,GAAEA,EAAEjD,KAAEA,EAAOpE,KAAKsH,eAAc1J,KAAEA,EAAIsC,GAAEA,EAAEqH,MAAEA,IAE5C,MAAO,CACNC,GAAIlJ,KAAKD,SACT+F,KAAM,CAAEnG,IAAKmG,GACbiD,GAAI,CAAEpJ,IAAKoJ,EAAIzJ,QACfuI,WAAYnG,KAAKf,QAAQkH,WACzBD,UAAW,CACVuB,SAAS,EACTC,MAAM,EACNzG,UAAMyC,EACNuC,MAAOjG,KAAKf,QAAQ0I,eACpB7I,SAAUkB,KAAKf,QAAQ2I,mBAExBC,QAAS,CACR3H,KACAqH,SAEDnF,MAAO,CACN0F,KAAM9H,KAAKf,QAAQmD,MACnBC,MAAOrC,KAAKf,QAAQmD,OAErB5D,QAAS,CACRuJ,OAAQ,OACRC,UAAU,EACVC,eAAWvE,GAEZwE,OAAQ,CACPC,OAAO,EACPzB,YAAQhD,GAGX,CCfa,MAAA0E,EAwCZ1I,WAAAA,CAAY+C,GAAUzC,KAtCZyC,UAAI,EAAAzC,KAGJqI,SAAyB,IAAI1F,IAIpBhB,KAAAA,MAAoB,CACtC,sBACA,sBACA,oBACA,qBACA,qBACA,mBACA,iBACA,cACA,YACA,kBACA,iBACA,SACA,UACA,gBACA,cACA,gBACA,mBACA,aACA,YACA,cACA,cACA,YACA,YACA,aACA,gBACA,cACA,mBACA,aAIA3B,KAAKyC,KAAOA,EACZzC,KAAKsI,MACN,CAKUA,IAAAA,GACTtI,KAAK2B,MAAMoB,QAASwF,GAASvI,KAAKwI,OAAOD,GAC1C,CAKAC,MAAAA,CAAOD,GACDvI,KAAKqI,SAASpF,IAAIsF,IACtBvI,KAAKqI,SAAS9F,IAAIgG,EAAkB,IAAI5F,IAE1C,CAKA8F,MAAAA,CAAOF,GACN,YAAYF,SAASpF,IAAIsF,EAC1B,CAKUpF,GAAAA,CAAwBoF,GACjC,MAAMG,EAAS1I,KAAKqI,SAASlF,IAAIoF,GACjC,GAAIG,EACH,OAAOA,EAERC,QAAQlI,uBAAuB8H,KAChC,CAKA9E,KAAAA,GACCzD,KAAKqI,SAAStF,QAAS2F,GAAWA,EAAOjF,QAC1C,CAsBAmF,EAAAA,CACCL,EACAM,EACA5J,EAAsB,CAAA,GAEtB,MAAMyJ,EAAS1I,KAAKmD,IAAIoF,GACxB,IAAKG,EAEJ,OADAC,QAAQG,cAAcP,iBACf,OAGR,MACMQ,EAAY3K,EAAA,CAAA,EAA6Ba,EAASuI,CAAAA,GAD7CkB,EAAO9F,KAAO,EACmC2F,OAAMM,YAGlE,OAFAH,EAAOnG,IAAIsG,EAASE,GAEb,IAAM/I,KAAKgJ,IAAIT,EAAMM,EAC7B,CAgBAI,MAAAA,CACCV,EACAM,EACA5J,EAAuB,CAAA,GAEvB,OAAWe,KAAC4I,GAAGL,EAAMM,EAAOzK,KAAOa,EAAO,CAAEgK,QAAQ,IACrD,CAgBAvL,OAAAA,CACC6K,EACAM,EACA5J,EAAuB,CAAA,GAEvB,OAAOe,KAAK4I,GAAGL,EAAMM,EAAOzK,EAAA,CAAA,EAAOa,EAASvB,CAAAA,SAAS,IACtD,CAeAwL,IAAAA,CACCX,EACAM,EACA5J,EAAuB,CAAE,GAEzB,OAAOe,KAAK4I,GAAGL,EAAMM,EAAOzK,EAAA,CAAA,EAAOa,EAAO,CAAEiK,MAAM,IACnD,CAaAF,GAAAA,CAAwBT,EAASM,GAChC,MAAMH,EAAS1I,KAAKmD,IAAIoF,GACpBG,GAAUG,EACGH,EAAOlF,OAAOqF,IAE7BF,QAAQG,0BAA0BP,iBAEzBG,GACVA,EAAOjF,OAET,CAUA,UAAM7B,CACL2G,EACAzD,EACAqE,GAEA,MAAMF,OAAEA,EAAMJ,QAAEA,EAAOO,MAAEA,GAAUpJ,KAAKqJ,YAAYd,EAAMY,cAC/CG,IAAIL,EAAQnE,GACvB,MAAO1B,SAAgBpD,KAAKsJ,IAAIT,EAAS/D,GAGzC,aAFM9E,KAAKsJ,IAAIF,EAAOtE,GACtB9E,KAAKuJ,iBAAiBhB,EAAMzD,GACrB1B,CACR,CAUAC,QAAAA,CACCkF,EACAzD,EACAqE,GAEA,MAAMF,OAAEA,EAAMJ,QAAEA,EAAOO,MAAEA,GAAUpJ,KAAKqJ,YAAYd,EAAMY,GAC1DnJ,KAAKwJ,QAAQP,EAAQnE,GACrB,MAAO1B,GAAUpD,KAAKwJ,QAAQX,EAAS/D,GAGvC,OAFA9E,KAAKwJ,QAAQJ,EAAOtE,GACpB9E,KAAKuJ,iBAAiBhB,EAAMzD,GACrB1B,CACR,CAaU,SAAMkG,CACfG,EACA3E,GAEA,MAAM4E,EAAU,GAChB,IAAK,MAAMnB,KAAEA,EAAIM,QAAEA,EAAOM,eAAEA,EAAcD,KAAEA,KAAUO,EAAe,CACpE,MAAMrG,QAAewB,EAAaiE,EAAS,CAAC7I,KAAKyC,KAAKZ,MAAOiD,EAAMqE,IACnEO,EAAQC,KAAKvG,GACT8F,GACHlJ,KAAKgJ,IAAIT,EAAMM,EAEhB,CACD,OAAOa,CACR,CAaUF,OAAAA,CACTC,EACA3E,GAEA,MAAM4E,EAAU,GAChB,IAAK,MAAMnB,KAAEA,EAAIM,QAAEA,EAAOM,eAAEA,EAAcD,KAAEA,KAAUO,EAAe,CACpE,MAAMrG,EAAUyF,EAAkC7I,KAAKyC,KAAKZ,MAAOiD,EAAMqE,GACzEO,EAAQC,KAAKvG,GACTqB,EAAUrB,IACbuF,QAAQG,KACP,uDAAuDP,4CAIrDW,GACHlJ,KAAKgJ,IAAIT,EAAMM,EAEhB,CACD,OAAOa,CACR,CASUL,WAAAA,CAAgCd,EAASY,GAClD,MAAMT,EAAS1I,KAAKmD,IAAIoF,GACxB,IAAKG,EACJ,MAAO,CAAEkB,OAAO,EAAOX,OAAQ,GAAIJ,QAAS,GAAIO,MAAO,GAAIS,UAAU,GAGtE,MAAMJ,EAAgBtF,MAAMC,KAAKsE,EAAOoB,UAIlCC,EAAO/J,KAAKgK,kBAGZf,EAASQ,EAAc1C,OAAO,EAAGkC,SAAQvL,aAAcuL,IAAWvL,GAASqM,KAAKA,GAChFrM,EAAU+L,EAAc1C,OAAO,EAAGrJ,aAAcA,GAASqJ,OALlDkD,IAA4E,GAKdF,KAAKA,GAC1EX,EAAQK,EAAc1C,OAAO,EAAGkC,SAAQvL,cAAeuL,IAAWvL,GAASqM,KAAKA,GAChFF,EAAWnM,EAAQwM,OAAS,EAIlC,IAAIrB,EAAwD,GAC5D,GAAIM,IACHN,EAAU,CAAC,CAAErB,GAAI,EAAGe,OAAMM,QAASM,IAC/BU,GAAU,CACb,MAAMM,EAAQzM,EAAQwM,OAAS,EAEzBE,EAAwBD,IAC7B,MAAME,EAAO3M,EAAQyM,EAAQ,GAC7B,OAAIE,EACI,CAACxI,EAAOiD,IACduF,EAAKxB,QAAQhH,EAAOiD,EAAMsF,EAAqBD,EAAQ,IAEjDhB,CACP,EAGFN,EAAU,CACT,CAAErB,GAAI,EAAGe,OAAMM,QAZSnL,EAAQyM,GAAOtB,QAYGM,eAFdiB,EAAqBD,IAIlD,CAGF,MAAO,CAAEP,OAAO,EAAMX,SAAQJ,UAASO,QAAOS,WAC/C,CAQUG,iBAAAA,CACTM,EACAC,GAAsB,IAAAC,EAAAC,EAItB,OAF4BD,OAAXA,EAACF,EAAEI,UAAQF,EAAI,IAAgB,OAAfC,EAAKF,EAAEG,UAAQD,EAAI,IACzCH,EAAE9C,GAAK+C,EAAE/C,IACK,CAC1B,CAMU+B,gBAAAA,CAAqChB,EAASzD,GAEvDlF,SAAS+K,cAAc,IAAIC,YAAY,QAAQrC,IAAQ,CAAEsC,OAD1C,CAAEtC,OAAMzD,OAAMjD,MAAO7B,KAAKyC,KAAKZ,SAE/C,ECveY,MAAAiJ,EAAoBlN,IAKhC,GAJIA,GAA2B,MAAnBA,EAAKmN,OAAO,KACvBnN,EAAOA,EAAKoN,UAAU,KAGlBpN,EACJ,OAAO,KAGR,MAAMqN,EAAUC,mBAAmBtN,GACnC,IAAIqH,EACHrF,SAASuL,eAAevN,IACxBgC,SAASuL,eAAeF,IACxBlH,EAAiB,WAAA0B,EAAO7H,SACxBmG,aAAiB0B,EAAOwF,QAMzB,OAJKhG,GAAoB,QAATrH,IACfqH,EAAUrF,SAASuF,MAGbF,GC1BFmG,EAAa,aACbC,EAAY,YAaInK,eAAAoK,GAErBC,SACCA,EAAQzM,SACRA,IAOD,IAAiB,IAAbA,IAAuByM,EAC1B,OAID,IAAIC,EAAkC,GACtC,GAAID,EACHC,EAAmBrH,MAAMC,KAAKmH,QACpBzM,GAAAA,IACV0M,EAAmBtH,EAASpF,EAAUc,SAASuF,OAE1CqG,EAAiBtB,QAErB,YADAvB,QAAQG,8DAA8DhK,OAKxE,MAAM2M,EAAoBD,EAAiBE,IAAKxL,GAcjD,SAAkC+E,GACjC,MAAMlG,KAAEA,EAAIwC,QAAEA,EAAOoK,UAAEA,GAiDR,SAAkB1G,EAAkB2G,GACnD,MAAMC,EAAStG,OAAOuG,iBAAiB7G,GAEjC8G,EAAmBC,EAAmBH,EAAW,GAAAT,UACjDa,EAAsBD,EAAmBH,EAAW,GAAAT,aACpDc,EAAoBC,EAAiBJ,EAAkBE,GACvDG,EAAkBJ,EAAmBH,EAAW,GAAAR,UAChDgB,EAAqBL,EAAmBH,EAAW,GAAAR,aACnDiB,EAAmBH,EAAiBC,EAAiBC,GAE3D,IAAItN,EAA8B,KAC9BwC,EAAU,EACVoK,EAAY,EAwBhB,OATCpK,EAAUjD,KAAKiO,IAAIL,EAAmBI,GACtCvN,EAAOwC,EAAU,EAAK2K,EAAoBI,EAAmBlB,EAAaC,EAAa,KACvFM,EAAY5M,EACTA,IAASqM,EACRa,EAAoB/B,OACpBmC,EAAmBnC,OACpB,EAGG,CACNnL,OACAwC,UACAoK,YAEF,CA1FsCa,CAAkBvH,GAGvD,SAAKlG,IAASwC,IAIH,IAAAgD,QAASrB,IACnB,MAAMuJ,EAAc,GAAA1N,OACd2N,EAAYC,YAAYC,MAC9B,IAAIC,EAAoB,EAExB,MAAMC,EAAMA,KACX7H,EAAQ8H,oBAAoBN,EAAUO,GACtC9J,GAAO,EAGF8J,EAAwBzF,IAE7B,GAAIA,EAAMb,SAAWzB,EAArB,CAIA,IAqEH,SAAsCsC,GACrC,MAAO,CAAI,GAAA6D,UAAoBC,QAAgB4B,SAAS1F,EAAMxI,KAC/D,CAvEQmO,CAA6B3F,GACjC,UAAU7G,MAAM,yCAIIiM,YAAYC,MAAQF,GAAa,IACpCnF,EAAM4F,eAKlBN,GAAqBlB,GAC1BmB,GAdA,CAeA,EAGFpL,WAAW,KACNmL,EAAoBlB,GACvBmB,GACA,EACCvL,EAAU,GAEb0D,EAAQmI,iBAAiBX,EAAUO,EAAK,EAE1C,CA9DwDK,CAAyBnN,IAC1DuL,EAAkB1E,OAAOuG,SAASpD,OAAS,QAU3D3F,QAAQ1B,IAAI4I,GARb3M,GACH6J,QAAQG,wEAC4DhK,MAOvE,CAmGA,SAASkN,EAAmBH,EAAoC7I,GAC/D,OAAQ6I,EAAO7I,IAAQ,IAAI8D,MAAM,KAClC,CAEA,SAASqF,EAAiBoB,EAAkBC,GAC3C,KAAOD,EAAOrD,OAASsD,EAAUtD,QAChCqD,EAASA,EAAOE,OAAOF,GAGxB,OAAOjP,KAAKiO,OAAOiB,EAAU9B,IAAI,CAACgC,EAAUC,IAAMjI,EAAKgI,GAAYhI,EAAK6H,EAAOI,KAChF,CC3IgB,SAAAC,EAEf3P,EACAgB,EAA4C,GAC5CqJ,EAAqC,CAAA,GAErC,GAAmB,iBAARrK,EACV,MAAU,IAAAyC,MAAM,4CAIjB,GAAIV,KAAK6N,kBAAkB5P,EAAK,CAAEiC,GAAIoI,EAAKpI,GAAIqH,MAAOe,EAAKf,QAE1D,YADAhC,OAAO1H,SAASsC,KAAOlC,GAIxB,MAAQA,IAAKoJ,EAAEzJ,KAAEA,GAAS4B,EAASa,QAAQpC,GAC3C+B,KAAK6B,MAAQ7B,KAAKoH,YAAWhJ,EAAA,CAAA,EAAMkK,EAAMjB,CAAAA,KAAIzJ,UAC7CoC,KAAK8N,kBAAkB7O,EACxB,CAasBiC,eAAA4M,EAErB7O,EAA4C,CAAE,GAE9Ce,KAAK+N,YAAa,EAGlB,MAAMlM,EAAQ7B,KAAK6B,OAEb3B,GAAEA,GAAO2B,EAAMgG,QACrB5I,EAAQ+O,SAAW/O,EAAQ+O,UAAYhO,KAAKsH,gBAEpB,IAApBrI,EAAQwI,UACX5F,EAAMqE,UAAUuB,SAAU,GAItB5F,EAAMqE,UAAUuB,SACpBzH,KAAKyG,QAAQhD,QAId,MAAMjF,EAAUS,EAAQT,UAAW0B,MAAAA,OAAAA,EAAAA,EAAIE,aAAa,4BAAwBsD,EACxElF,GAAW,CAAC,OAAQ,WAAWyO,SAASzO,KAC3CqD,EAAMrD,QAAQuJ,OAASvJ,GAIxB,MAAM0H,EAAYjH,EAAQiH,YAAe,MAAFhG,OAAE,EAAFA,EAAIE,aAAa,8BAA0BsD,EAM3CuK,IAAAA,EAAAC,EALnChI,IACHrE,EAAMqE,UAAUjF,KAAOiF,GAIK,iBAAlBjH,EAAQmD,OAClBP,EAAMO,MAAM0F,KAAyBmG,OAArBA,EAAGhP,EAAQmD,MAAM0F,MAAImG,EAAIpM,EAAMO,MAAM0F,KACrDjG,EAAMO,MAAMC,MAA2B,OAAtB6L,EAAGjP,EAAQmD,MAAMC,OAAK6L,EAAIrM,EAAMO,MAAMC,YAC3BqB,IAAlBzE,EAAQmD,QAClBP,EAAMO,MAAQ,CAAE0F,OAAQ7I,EAAQmD,MAAOC,QAASpD,EAAQmD,eAGlDnD,EAAQmD,MAEf,UACOpC,KAAK2B,MAAMC,KAAK,mBAAe8B,GAGrC,MAAMyK,EAAcnO,KAAK2B,MAAMC,KAAK,YAAa,CAAE3C,WAAWiC,MAAOW,EAAOiD,KAE3E,IAAIsJ,EAQJ,OAPIvM,EAAMO,MAAM0F,OACfsG,EAAapO,KAAKoC,MAAMe,IAAItB,EAAMwF,GAAGpJ,MAGtC6G,EAAK3C,KAAOiM,SAAqBpO,KAAKmB,UAAUU,EAAMwF,GAAGpJ,IAAK6G,EAAK7F,SACnE6F,EAAK1C,QAAUgM,EAERtJ,EAAK3C,OAIb,IAAKN,EAAMrD,QAAQwJ,SAAU,CAE5B,MAAMqG,EAASxM,EAAMwF,GAAGpJ,IAAM4D,EAAMwF,GAAGzJ,KACV,YAAzBiE,EAAMrD,QAAQuJ,QAAwBlG,EAAMwF,GAAGpJ,MAAQ+B,KAAKsH,eAC/D5I,EAAoB2P,IAEpBrO,KAAKsO,sBACLtQ,EAAoBqQ,EAAQ,CAAElE,MAAOnK,KAAKsO,sBAE3C,CAKD,GAHAtO,KAAKsH,eAAiB3J,IAGlBkE,EAAMqE,UAAUwB,KAAM,CACzB,MAAMzF,KAAEA,SAAekM,EACvBtM,EAAMwF,GAAGpF,KAAOA,CAChB,OAGSjC,KAAC2B,MAAMC,KAAK,wBAAoB8B,EAAWxC,UAEpD,MAAMqN,EAAmBvO,KAAKwO,kBAGvBrM,SAAcoC,QAAQ1B,IAAI,CAACsL,EAAaI,IAG/C,OAAI1M,EAAM2F,KAAOxH,KAAK6B,MAAM2F,WAKlBxH,KAACyO,WAAWtM,cAGXuM,iBAGZ,WAGU1O,KAAC2B,MAAMC,KAAK,iBAAa8B,EAAW,IAAM1D,KAAKyG,QAAQhD,SAMjEzD,KAAK+N,YAAa,CAClB,CAAC,MAAOtN,GAER,IAAKA,SAAUA,GAAAA,EAAsBM,QACpC,OAID4H,QAAQlI,MAAMA,GAGdT,KAAKf,QAAQ0P,qBAAuB,KACnCpJ,OAAO1H,SAASsC,KAAO0B,EAAMwF,GAAGpJ,IAAM4D,EAAMwF,GAAGzJ,MAEhD,GAGA2H,OAAO/G,QAAQoQ,IAAI,EACnB,CACF,OCrLaJ,EAAiBtN,iBACxBlB,KAAK6B,MAAMqE,UAAUuB,eAKhBzH,KAAC2B,MAAMC,KAAK,2BAAuB8B,EAAY7B,IACxD7B,KAAKyG,QAAQD,IAAI,cAAe,aAAc,gBAC1C3E,EAAMrD,QAAQwJ,UACjBhI,KAAKyG,QAAQD,IAAI,eAEd3E,EAAMqE,UAAUjF,MACnBjB,KAAKyG,QAAQD,UAAUnJ,EAASwE,EAAMqE,UAAUjF,QAChD,SAGQjB,KAAC2B,MAAMC,KAAK,sBAAuB,CAAEiN,MAAM,GAAS3N,MAAOW,GAASgN,WACzEA,SACM7O,KAACsL,gBAAgB,CAAExM,SAAU+C,EAAMqE,UAAUpH,UAAU,SAG5DkB,KAAK2B,MAAMC,KAAK,yBAAqB8B,eAnB/B/B,MAAMC,KAAK,sBAAkB8B,EAoB1C,EChBaoL,EAAiB,UAE7B7M,KAAEA,IACFkE,WAAEA,GAAsDnG,KAAKf,SAAO8P,IAAAA,EAEpE,MAAMC,GAAmB,IAAIC,WAAYC,gBAAgBjN,EAAM,aAGzDkN,GAAQJ,OAAAA,EAAAC,EAAiB/K,cAAc,eAA/B8K,EAAAA,EAAyCK,YAAa,GACpExP,SAASuP,MAAQA,EAGjB,MAAME,EAAoBnL,EAAS,mDAG7B2F,EAAW1D,EACfuF,IAAK5M,IACL,MAAMwQ,EAAY1P,SAASqE,cAAcnF,GACnCyQ,EAAaP,EAAiB/K,cAAcnF,GAClD,OAAIwQ,GAAaC,GAChBD,EAAUE,YAAYD,IAEtB,IACID,GACJ3G,QAAQG,sDAAsDhK,KAE1DyQ,GACJ5G,QAAQG,uDAAuDhK,MAEzD,KAEPiI,OAAOuG,SAWT,OARA+B,EAAkBtM,QAAS0M,IAC1B,MAAMzM,EAAMyM,EAASrP,aAAa,qBAC5BsP,EAAc3L,yBAA6Bf,OAC7C0M,GAAeA,IAAgBD,GAClCC,EAAYF,YAAYC,EACxB,GAGK5F,EAASK,SAAW/D,EAAW+D,MACvC,EClDayF,EAAkB,WAC9B,MAAM1Q,EAAiC,CAAE2Q,SAAU,SAC7ClJ,OAAEA,EAAMyB,MAAEA,GAAUnI,KAAK6B,MAAMqG,OAC/B2H,QAAenJ,EAAAA,EAAU1G,KAAK6B,MAAMwF,GAAGzJ,KAE7C,IAAIkS,GAAW,EAuBf,OArBID,IACHC,EAAW9P,KAAK2B,MAAM0B,SACrB,gBACA,CAAEzF,KAAMiS,EAAc5Q,WACtB,CAAC4C,GAASjE,OAAMqB,cACf,MAAM8Q,EAAS/P,KAAK8K,iBAAiBlN,GAIrC,OAHImS,GACHA,EAAOC,eAAe/Q,KAEd8Q,KAKR5H,IAAU2H,IACbA,EAAW9P,KAAK2B,MAAM0B,SAAS,aAAc,CAAEpE,WAAW,CAAC4C,GAAS5C,cACnEsG,OAAO0K,SAAQ7R,EAAA,CAAG8R,IAAK,EAAGC,KAAM,GAAMlR,UAKjC6Q,CACR,EC5BapB,EAAgBxN,iBAC5B,IAAKlB,KAAK6B,MAAMqE,UAAUuB,QACzB,OAGD,MAAMvB,EAAYlG,KAAK2B,MAAMC,KAC5B,qBACA,CAAEiN,MAAM,GACR3N,MAAOW,GAASgN,WACXA,SACE7O,KAAKsL,gBAAgB,CAAExM,SAAU+C,EAAMqE,UAAUpH,UACxD,SAGKwF,UAEItE,KAAC2B,MAAMC,KAAK,0BAAsB8B,EAAW,KACtD1D,KAAKyG,QAAQG,OAAO,eACrB,SAEMV,QAEIlG,KAAC2B,MAAMC,KAAK,wBAAoB8B,EAC3C,ECvBa+K,EAAavN,eAA4BiB,GACrD,MAAMlE,IAAEA,EAAGgE,KAAEA,GAASE,EAEtBnC,KAAKyG,QAAQG,OAAO,cAGf5G,KAAKoQ,kBAAkBzS,IAAiBM,KAC5CS,EAAoBT,GACpB+B,KAAKsH,eAAiB3J,IACtBqC,KAAK6B,MAAMwF,GAAGpJ,IAAM+B,KAAKsH,gBAItBtH,KAAK6B,MAAMqE,UAAUuB,SACxBzH,KAAKyG,QAAQD,IAAI,gBAIlBxG,KAAK6B,MAAMwF,GAAGpF,KAAOA,QAGfjC,KAAK2B,MAAMC,KAAK,kBAAmB,CAAEO,QAAQ,CAACN,GAASM,WAE5D,IADgBnC,KAAK8O,eAAe3M,EAAM,CAAEgE,WAAYtE,EAAMsE,aAE7D,MAAM,IAAIzF,MAAM,uCAEbmB,EAAMqE,UAAUuB,UAEnBzH,KAAKyG,QAAQD,IAAI,eAAgB,cAAe,gBAC5C3E,EAAMqE,UAAUjF,MACnBjB,KAAKyG,QAAQD,UAAUnJ,EAASwE,EAAMqE,UAAUjF,SAEjD,SAKIjB,KAAK2B,MAAMC,KAAK,sBAAkB8B,EAAW,IACvC1D,KAAC2P,yBAGP3P,KAAK2B,MAAMC,KAAK,YAAa,CAAE3D,IAAK+B,KAAKsH,eAAgB6H,MAAOvP,SAASuP,OAChF,ECrBakB,EAAM,SAAsBC,GANnBC,MAOrB,GAPqBA,EAOHD,EALXhD,cAAQiD,SAAAA,EAAoBC,eAWnC,GADAF,EAAO7N,KAAOzC,MACVsQ,EAAOG,oBACLH,EAAOG,qBAWb,OAPIH,EAAOI,cACVJ,EAAOI,eAERJ,EAAOK,QAEP3Q,KAAK4Q,QAAQjH,KAAK2G,GAEXtQ,KAAK4Q,aAjBXjI,QAAQlI,MAAM,6BAA8B6P,EAkB9C,EAGgB,SAAAO,EAAkBC,GACjC,MAAMR,EAAStQ,KAAK+Q,WAAWD,GAC/B,GAAKR,EAYL,OAPAA,EAAOU,UACHV,EAAOW,eACVX,EAAOW,gBAGRjR,KAAK4Q,QAAU5Q,KAAK4Q,QAAQ7J,OAAQmK,GAAMA,IAAMZ,GAEzCtQ,KAAK4Q,QAXXjI,QAAQlI,MAAM,iBAAkB6P,EAYlC,CAGM,SAAUS,EAAuBD,GACtC,OAAW9Q,KAAC4Q,QAAQO,KAClBb,GACAA,IAAWQ,GACXR,EAAOrP,OAAS6P,GAChBR,EAAOrP,OAAgB,OAAAzD,OAAOsT,KAEjC,CCrEM,SAAUhN,EAAuB7F,GACtC,GAAuC,mBAAxB+B,KAACf,QAAQ6E,WAEvB,OADA6E,QAAQG,KAAK,0DACN7K,EAER,MAAMmF,EAASpD,KAAKf,QAAQ6E,WAAW7F,GACvC,OAAKmF,GAA4B,iBAAXA,EAIlBA,EAAO+D,WAAW,OAAS/D,EAAO+D,WAAW,SAChDwB,QAAQG,KAAK,4DACN7K,GAEDmF,GAPNuF,QAAQG,KAAK,mDACN7K,EAOT,CAQgB,SAAAmS,EAA8BgB,EAAcC,GAC3D,OAAWrR,KAAC8D,WAAWsN,KAAUpR,KAAK8D,WAAWuN,EAClD,CCuBA,MAAMC,EAAoB,CACzBC,wBAAwB,EACxB3J,kBAAmB,yBACnBD,eAAgB,OAChBvF,OAAO,EACP+D,WAAY,CAAC,SACbqL,YAAaA,CAACvT,GAAOiC,MAAO,OAAW,MAAFA,IAAAA,EAAIuR,QAAQ,mBACjDC,aAAc,UACdC,WAAY,SACZf,QAAS,GACT9M,WAAa7F,GAAQA,EACrBqD,eAAgB,CACf,mBAAoB,OACpBsQ,OAAU,oCAEXjD,qBAAuBpH,QAAKsK,EAAA,MAA+C,UAAzCA,OAAAA,EAAAtK,EAAM5I,YAANkT,EAAAA,EAA8BtT,OAAW,EAC3EgD,QAAS,GAIW,MAAAuQ,EAgEpBpS,WAAAA,CAAYT,EAA4B,IAAE8S,IAAAA,EAAAC,EAAAhS,KA9DjCiS,gBAEThT,KAAAA,oBAESqS,SAAoBA,EAE7BV,KAAAA,QAAoB,QAEpB/O,WAAK,EAAA7B,KAEIoC,WAEAT,EAAAA,KAAAA,kBAEA8E,aAAO,EAAAzG,KAEhBsH,eAAyB3J,IAEf2Q,KAAAA,gCAEA4D,mBAAa,EAAAlS,KAEb+N,YAAsB,EAGhCsC,KAAAA,IAAMA,EAAGrQ,KAET6Q,MAAQA,EAERE,KAAAA,WAAaA,EAAU/Q,KAGvBmS,IAAoD,OAAQnS,KAG5D4N,SAAWA,EAEDE,KAAAA,kBAAoBA,EAAiB9N,KAErCoH,YAAcA,EAExBvI,KAAAA,cAAgBA,EAAamB,KAE7BmB,UAAYA,EAEZmK,KAAAA,gBAAkBA,OACRmD,WAAaA,EAEvBK,KAAAA,eAAiBA,EAAc9O,KACrB0O,cAAgBA,EAChBF,KAAAA,eAAiBA,EAAcxO,KAC/B2P,gBAAkBA,EAE5B7E,KAAAA,iBAAmBA,EAAgB9K,KAGnCrC,cAAgBA,OAEhBmG,WAAaA,EAAU9D,KAEboQ,kBAAoBA,EAI7BpQ,KAAKf,QAAOb,EAAA,GAAQ4B,KAAKsR,SAAarS,GAEtCe,KAAKoS,gBAAkBpS,KAAKoS,gBAAgBC,KAAKrS,MACjDA,KAAKsS,eAAiBtS,KAAKsS,eAAeD,KAAKrS,MAE/CA,KAAKoC,MAAQ,IAAII,EAAMxC,MACvBA,KAAKyG,QAAU,IAAIX,EAAQ9F,MAC3BA,KAAK2B,MAAQ,IAAIyG,EAAMpI,MACvBA,KAAK6B,MAAQ7B,KAAKoH,YAAY,CAAEC,GAAI,KAEpCrH,KAAKsO,oBAA4D,OAAzCyD,SAAAC,EAAIxT,QAAQG,cAARqT,EAAgC7H,OAAK4H,EAAI,EAEhE/R,KAAKuS,qBAIVvS,KAAKwS,QACN,CAEUD,iBAAAA,GACT,MAAuB,oBAAZhO,UACVoE,QAAQG,KAAK,6BAEb,EAEF,CAGA,YAAM0J,GAAM,IAAAC,EAEX,MAAMf,aAAEA,GAAiB1R,KAAKf,QAC9Be,KAAKkS,cAAgBlS,KAAKnB,cAAc6S,EAAc,QAAS1R,KAAKoS,iBAEpE7M,OAAO6H,iBAAiB,WAAYpN,KAAKsS,gBAGrCtS,KAAKf,QAAQsS,yBAChBhM,OAAO/G,QAAQkU,kBAAoB,UAUpC1S,KAAKf,QAAQ2R,QAAQ7N,QAASuN,GAAWtQ,KAAKqQ,IAAIC,IAGF,UAA3CmC,OAAAA,EAAAjU,QAAQG,YAAR8T,EAAAA,EAAgClU,SACpCG,EAAoB,KAAM,CAAEyL,MAAOnK,KAAKsO,4BAInChK,UAGAtE,KAAK2B,MAAMC,KAAK,cAAU8B,EAAW,KAE1C9D,SAAS+S,gBAAgBhM,UAAUH,IAAI,eAAc,EAEvD,CAGA,aAAMlH,GAELU,KAAKkS,cAAe5S,UAGpBiG,OAAOwH,oBAAoB,WAAY/M,KAAKsS,gBAG5CtS,KAAKoC,MAAMqB,QAGXzD,KAAKf,QAAQ2R,QAAQ7N,QAASuN,GAAWtQ,KAAK6Q,MAAMP,UAG9CtQ,KAAK2B,MAAMC,KAAK,eAAW8B,EAAW,KAE3C9D,SAAS+S,gBAAgBhM,UAAUC,OAAO,eAC3C,GAGA5G,KAAK2B,MAAM8B,OACZ,CAGAoK,iBAAAA,CAAkB1N,GAAcD,GAAEA,EAAEqH,MAAEA,GAA2C,CAAE,GAClF,MAAMqL,OAAEA,EAAM3U,IAAEA,EAAGL,KAAEA,GAAS4B,EAASa,QAAQF,GAG/C,OAAIyS,IAAWrN,OAAO1H,SAAS+U,WAK3B1S,IAAMF,KAAK6S,yBAAyB3S,OAKpCF,KAAKf,QAAQuS,YAAYvT,EAAML,EAAM,CAAEsC,KAAIqH,SAMhD,CAEU6K,eAAAA,CAAgB7K,GACzB,MAAMrH,EAAKqH,EAAMuL,gBACX3S,KAAEA,EAAIlC,IAAEA,EAAGL,KAAEA,GAAS4B,EAASS,YAAYC,GAG7CF,KAAK6N,kBAAkB1N,EAAM,CAAED,KAAIqH,YAKnCvH,KAAK+N,YAAc9P,IAAQ+B,KAAK6B,MAAMwF,GAAGpJ,IAC5CsJ,EAAMwL,kBAIP/S,KAAK6B,MAAQ7B,KAAKoH,YAAY,CAAEC,GAAIpJ,EAAKL,OAAMsC,KAAIqH,UAG/CA,EAAMyL,SAAWzL,EAAM0L,SAAW1L,EAAM2L,UAAY3L,EAAM4L,OAC7DnT,KAAK2B,MAAMC,KAAK,cAAe,CAAEzB,SAKb,IAAjBoH,EAAM6L,QAIVpT,KAAK2B,MAAM0B,SAAS,aAAc,CAAEnD,KAAIqH,SAAS,KAAK,IAAA8L,EACrD,MAAMjP,EAA0B,OAAtBiP,EAAGrT,KAAK6B,MAAMuC,KAAKnG,KAAGoV,EAAI,GAEpC9L,EAAMwL,iBAGD9U,GAAOA,IAAQmG,EAwBhBpE,KAAKoQ,kBAAkBnS,EAAKmG,IAKhCpE,KAAK8N,oBA5BAlQ,EAEHoC,KAAK2B,MAAM0B,SAAS,cAAe,CAAEzF,QAAQ,KAC5Cc,EAAoBT,EAAML,GAC1BoC,KAAK2P,oBAIN3P,KAAK2B,MAAM0B,SAAS,iBAAaK,EAAW,IAErC,aADE1D,KAAKf,QAAQ0S,WAEZ3R,KAAK8N,qBAGZpP,EAAoBT,GACT+B,KAAC2P,mBAclB,IACD,CAEU2C,cAAAA,CAAe/K,OAAoB+L,EAAAC,EAAAC,EAAAC,EAC5C,MAAMtT,SAAImT,EAAwC,OAAxCC,EAAYhM,EAAM5I,YAAsB,EAA5B4U,EAA8BtV,KAAGqV,EAAIzV,SAASsC,KAGpE,GAAIH,KAAKf,QAAQ0P,qBAAqBpH,GACrC,OAID,GAAIvH,KAAKoQ,kBAAkBzS,IAAiBqC,KAAKsH,gBAChD,OAGD,MAAMrJ,IAAEA,EAAGL,KAAEA,GAAS4B,EAASa,QAAQF,GAEvCH,KAAK6B,MAAQ7B,KAAKoH,YAAY,CAAEC,GAAIpJ,EAAKL,OAAM2J,UAG/CvH,KAAK6B,MAAMrD,QAAQwJ,UAAW,EAG9B,MAAMmC,EAA4CqJ,OAAvCA,EAAgC,OAAhCC,EAAIlM,EAAM5I,YAAsB,EAA5B8U,EAA8BtJ,OAAKqJ,EAAI,EAClDrJ,GAASA,IAAUnK,KAAKsO,sBAE3BtO,KAAK6B,MAAMrD,QAAQyJ,UADDkC,EAAQnK,KAAKsO,oBAAsB,EAAI,WAAa,YAEtEtO,KAAKsO,oBAAsBnE,GAI5BnK,KAAK6B,MAAMqE,UAAUuB,SAAU,EAC/BzH,KAAK6B,MAAMqG,OAAOC,OAAQ,EAC1BnI,KAAK6B,MAAMqG,OAAOxB,QAAS,EAGvB1G,KAAKf,QAAQsS,yBAChBvR,KAAK6B,MAAMqE,UAAUuB,SAAU,EAC/BzH,KAAK6B,MAAMqG,OAAOC,OAAQ,GAQ3BnI,KAAK2B,MAAM0B,SAAS,mBAAoB,CAAEkE,SAAS,KAClDvH,KAAK8N,qBAEP,CAGU+E,wBAAAA,CAAyBa,GAClC,QAAIA,EAAUC,QAAQ,gCAIvB"}